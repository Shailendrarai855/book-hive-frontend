{"ast":null,"code":"const handleApprove = async registrationId => {\n  try {\n    console.log(registrationId, data.adminId);\n    const response = await fetch(`http://localhost:8080/admin/${data.adminId}/approveMember/${registrationId}`, {\n      method: 'POST',\n      body: null\n    });\n    if (response.ok) {\n      console.log('Approved member with id:', registrationId);\n      // Fetch members again after approval\n      fetchMembers();\n    } else {\n      console.error('Failed to approve member');\n    }\n  } catch (error) {\n    console.error('Error approving member:', error);\n  }\n};","map":{"version":3,"names":["handleApprove","registrationId","console","log","data","adminId","response","fetch","method","body","ok","fetchMembers","error"],"sources":["C:/Users/mohni/OneDrive/Desktop/book-hive/src/dashboards/Adminsidebarpages/Addmember.jsx"],"sourcesContent":["const handleApprove = async (registrationId) => {\r\n  try {\r\n    console.log(registrationId, data.adminId);\r\n    const response = await fetch(`http://localhost:8080/admin/${data.adminId}/approveMember/${registrationId}`, {\r\n      method: 'POST',\r\n      body: null,\r\n    });\r\n    if (response.ok) {\r\n      console.log('Approved member with id:', registrationId);\r\n      // Fetch members again after approval\r\n      fetchMembers();\r\n    } else {\r\n      console.error('Failed to approve member');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error approving member:', error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAOC,cAAc,IAAK;EAC9C,IAAI;IACFC,OAAO,CAACC,GAAG,CAACF,cAAc,EAAEG,IAAI,CAACC,OAAO,CAAC;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BH,IAAI,CAACC,OAAO,kBAAkBJ,cAAc,EAAE,EAAE;MAC1GO,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;MACfR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,cAAc,CAAC;MACvD;MACAU,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLT,OAAO,CAACU,KAAK,CAAC,0BAA0B,CAAC;IAC3C;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}